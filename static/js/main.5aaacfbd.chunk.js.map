{"version":3,"sources":["components/MenuFirstLevel/MenuFirstLevel.module.scss","components/MenuSecondLevel/MenuSecondLevel.module.scss","App.module.scss","components/MenuSecondLevel/MenuSecondLevel__icons/Chevron_white.svg","components/MenuFirstLevel/MenuFirstLevel__icons/icon-01-menuFirstLevel.svg","components/MenuFirstLevel/MenuFirstLevel__icons/icon-02-menuFirstLevel.svg","components/MenuFirstLevel/MenuFirstLevel__icons/icon-03-menuFirstLevel.svg","components/MenuFirstLevel/MenuFirstLevel__icons/icon-04-menuFirstLevel.svg","components/MenuFirstLevel/MenuFirstLevel__icons/icon-05-menuFirstLevel.svg","components/MenuSecondLevel/MenuSecondLevel__icons/icon-01-menuSecondLevel__lemonade.svg","components/MenuSecondLevel/MenuSecondLevel__icons/icon-02-menuSecondLevel__gas.svg","components/MenuSecondLevel/MenuSecondLevel__icons/icon-03-menuSecondLevel__flask.svg","components/MenuSecondLevel/MenuSecondLevel__icons/Chevron.svg","components/MenuFirstLevel/MenuFirstLevel.jsx","components/MenuSecondLevel/MenuSecondLevel.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuFirstLevel","className","s","menuFirstLevel","menuItem_flatRack","alt","src","icon01","menuItem__title_grey","menuItem_openTop","icon02","menuItem__title_blue","menuItem_tankConteiner","icon03","menuItem__title_white","menuItem_termConteiner","icon04","menuItem_universalConteiner","icon05","MenuSecondLevel","menuSecondLevel","menuItem_food","menuItem__title_food","chevron","menuItem_gas","menuItem__title_gas","chevronWhite","chevron_white","menuItem_chemists","menuItem__title_chemists","App","navMenu","secondLevel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,kBAAoB,0CAA0C,iBAAmB,yCAAyC,uBAAyB,+CAA+C,uBAAyB,+CAA+C,4BAA8B,oDAAoD,qBAAuB,6CAA6C,qBAAuB,6CAA6C,sBAAwB,gD,gBCAtkBD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,cAAgB,uCAAuC,qBAAuB,8CAA8C,aAAe,sCAAsC,oBAAsB,6CAA6C,kBAAoB,2CAA2C,yBAA2B,kDAAkD,QAAU,iCAAiC,cAAgB,yC,gBCAxgBD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,YAAc,2B,gBCD/DD,EAAOC,QAAU,IAA0B,2C,kBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,+D,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,qC,yPC4D5BC,EApDQ,WACrB,OACI,wBAAIC,UAAWC,IAAEC,gBACf,wBAAIF,UAAWC,IAAEE,mBACf,6BACE,yBAAKC,IAAI,yEAAuBC,IAAKC,OAEvC,yBAAKN,UAAWC,IAAEM,sBAChB,2CACA,gGAGJ,wBAAIP,UAAWC,IAAEO,kBACf,6BACE,yBAAKJ,IAAI,2GAAsBC,IAAKI,OAEtC,yBAAKT,UAAWC,IAAES,sBAChB,6EACA,gGAGJ,wBAAIV,UAAWC,IAAEU,wBACf,6BACE,yBAAKP,IAAI,2GAAsBC,IAAKO,OAEtC,yBAAKZ,UAAWC,IAAEY,uBAChB,2DACA,gGAGJ,wBAAIb,UAAWC,IAAEa,wBACf,6BACE,yBAAKV,IAAI,8FAAmBC,IAAKU,OAEnC,yBAAKf,UAAWC,IAAEM,sBAChB,iEACA,gGAGJ,wBAAIP,UAAWC,IAAEe,6BACf,6BACE,yBAAKZ,IAAI,8IAA2BC,IAAKY,OAE3C,yBAAKjB,UAAWC,IAAEM,sBAChB,gHACA,4F,oGCCGW,EA9CS,WACtB,OACE,wBAAIlB,UAAWC,IAAEkB,iBACf,wBAAInB,UAAWC,IAAEmB,eACf,6BACE,yBAAKhB,IAAI,yEAAuBC,IAAKC,OAEvC,yBAAKN,UAAWC,IAAEoB,sBAChB,wFACA,4EACA,uEAEF,6BACE,yBAAKjB,IAAI,wFAAkBC,IAAKiB,IAAStB,UAAWC,IAAEqB,YAG1D,wBAAItB,UAAWC,IAAEsB,cACf,6BACE,yBAAKnB,IAAI,yEAAuBC,IAAKI,OAEvC,yBAAKT,UAAWC,IAAEuB,qBAChB,wFACA,wFACA,iEAEF,6BACE,yBAAKpB,IAAI,wFAAkBC,IAAKoB,IAAczB,UAAWC,IAAEyB,kBAG/D,wBAAI1B,UAAWC,IAAE0B,mBACf,6BACE,yBAAKvB,IAAI,yEAAuBC,IAAKO,OAEvC,yBAAKZ,UAAWC,IAAE2B,0BAChB,wFACA,8FACA,uEAEF,6BACE,yBAAKxB,IAAI,wFAAkBC,IAAKoB,IAAczB,UAAWC,IAAEyB,oBC3BtDG,MAff,WACE,OACE,6BACE,yBAAK7B,UAAWC,IAAE6B,SAChB,kBAAC,EAAD,OAEF,yBAAK9B,UAAWC,IAAE8B,aAChB,yBAAK/B,UAAWC,IAAE6B,SAChB,kBAAC,EAAD,UCDUE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5aaacfbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuFirstLevel\":\"MenuFirstLevel_menuFirstLevel__2O3Tt\",\"menuItem_flatRack\":\"MenuFirstLevel_menuItem_flatRack__2pegX\",\"menuItem_openTop\":\"MenuFirstLevel_menuItem_openTop__2Wfvc\",\"menuItem_tankConteiner\":\"MenuFirstLevel_menuItem_tankConteiner__2exhw\",\"menuItem_termConteiner\":\"MenuFirstLevel_menuItem_termConteiner__-klrH\",\"menuItem_universalConteiner\":\"MenuFirstLevel_menuItem_universalConteiner__1CPBM\",\"menuItem__title_grey\":\"MenuFirstLevel_menuItem__title_grey__3mWtz\",\"menuItem__title_blue\":\"MenuFirstLevel_menuItem__title_blue__Hpf05\",\"menuItem__title_white\":\"MenuFirstLevel_menuItem__title_white__3D1RZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuSecondLevel\":\"MenuSecondLevel_menuSecondLevel__2rWG1\",\"menuItem_food\":\"MenuSecondLevel_menuItem_food__g6y_v\",\"menuItem__title_food\":\"MenuSecondLevel_menuItem__title_food__2py9T\",\"menuItem_gas\":\"MenuSecondLevel_menuItem_gas__mo1cj\",\"menuItem__title_gas\":\"MenuSecondLevel_menuItem__title_gas__2-PdF\",\"menuItem_chemists\":\"MenuSecondLevel_menuItem_chemists__2M4qc\",\"menuItem__title_chemists\":\"MenuSecondLevel_menuItem__title_chemists__CmBRB\",\"chevron\":\"MenuSecondLevel_chevron__2QOAt\",\"chevron_white\":\"MenuSecondLevel_chevron_white___9oKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenu\":\"App_navMenu__19tUV\",\"secondLevel\":\"App_secondLevel__2d-_3\"};","module.exports = __webpack_public_path__ + \"static/media/Chevron_white.1c840b72.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-01-menuFirstLevel.98f67dd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-02-menuFirstLevel.940fa65c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-03-menuFirstLevel.cccb366a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-04-menuFirstLevel.e75c1da4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-05-menuFirstLevel.13fdc061.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-01-menuSecondLevel__lemonade.575bd781.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-02-menuSecondLevel__gas.155064eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-03-menuSecondLevel__flask.62e1d92e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chevron.4984c997.svg\";","import React from 'react'\r\nimport s from './MenuFirstLevel.module.scss'\r\nimport icon01 from './MenuFirstLevel__icons/icon-01-menuFirstLevel.svg'\r\nimport icon02 from './MenuFirstLevel__icons/icon-02-menuFirstLevel.svg'\r\nimport icon03 from './MenuFirstLevel__icons/icon-03-menuFirstLevel.svg'\r\nimport icon04 from './MenuFirstLevel__icons/icon-04-menuFirstLevel.svg'\r\nimport icon05 from './MenuFirstLevel__icons/icon-05-menuFirstLevel.svg'\r\n\r\nconst MenuFirstLevel = () => {\r\n  return (\r\n      <ul className={s.menuFirstLevel}>\r\n        <li className={s.menuItem_flatRack}>\r\n          <div>\r\n            <img alt=\"flat Rack контецнеры\" src={icon01} />\r\n          </div>\r\n          <div className={s.menuItem__title_grey}>\r\n            <span>Flat Rack</span>\r\n            <span>контейнеры</span>\r\n          </div>\r\n        </li>\r\n        <li className={s.menuItem_openTop}>\r\n          <div>\r\n            <img alt=\"Опен топ контецнеры\" src={icon02} />\r\n          </div>\r\n          <div className={s.menuItem__title_blue}>\r\n            <span>Опен топ</span>\r\n            <span>Контейнеры</span>\r\n          </div>\r\n        </li>\r\n        <li className={s.menuItem_tankConteiner}>\r\n          <div>\r\n            <img alt=\"Танк-топ контецнеры\" src={icon03} />\r\n          </div>\r\n          <div className={s.menuItem__title_white}>\r\n            <span>Танк-</span>\r\n            <span>Контейнеры</span>\r\n          </div>\r\n        </li>\r\n        <li className={s.menuItem_termConteiner}>\r\n          <div>\r\n            <img alt=\"Термо-контецнеры\" src={icon04} />\r\n          </div>\r\n          <div className={s.menuItem__title_grey}>\r\n            <span>Термо-</span>\r\n            <span>Контейнеры</span>\r\n          </div>\r\n        </li>\r\n        <li className={s.menuItem_universalConteiner}>\r\n          <div>\r\n            <img alt=\"Универсальный контецнеры\" src={icon05} />\r\n          </div>\r\n          <div className={s.menuItem__title_grey}>\r\n            <span>Универсальный</span>\r\n            <span>Контейнер</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n  )\r\n}\r\n\r\nexport default MenuFirstLevel\r\n","import React from 'react'\r\nimport s from './MenuSecondLevel.module.scss'\r\nimport icon01 from './MenuSecondLevel__icons/icon-01-menuSecondLevel__lemonade.svg'\r\nimport icon02 from './MenuSecondLevel__icons/icon-02-menuSecondLevel__gas.svg'\r\nimport icon03 from './MenuSecondLevel__icons/icon-03-menuSecondLevel__flask.svg'\r\nimport chevron from './MenuSecondLevel__icons/Chevron.svg'\r\nimport chevronWhite from './MenuSecondLevel__icons/Chevron_white.svg'\r\n\r\nconst MenuSecondLevel = () => {\r\n  return (\r\n    <ul className={s.menuSecondLevel}>\r\n      <li className={s.menuItem_food}>\r\n        <div>\r\n          <img alt=\"flat Rack контецнеры\" src={icon01} />\r\n        </div>\r\n        <div className={s.menuItem__title_food}>\r\n          <span>перевозка</span>\r\n          <span>пищевых</span>\r\n          <span>грузов</span>\r\n        </div>\r\n        <div>\r\n          <img alt=\"развернуть меню\" src={chevron} className={s.chevron} />\r\n        </div>\r\n      </li>\r\n      <li className={s.menuItem_gas}>\r\n        <div>\r\n          <img alt=\"flat Rack контецнеры\" src={icon02} />\r\n        </div>\r\n        <div className={s.menuItem__title_gas}>\r\n          <span>перевозка</span>\r\n          <span>сжиженных</span>\r\n          <span>газов</span>\r\n        </div>\r\n        <div>\r\n          <img alt=\"развернуть меню\" src={chevronWhite} className={s.chevron_white} />\r\n        </div>\r\n      </li>\r\n      <li className={s.menuItem_chemists}>\r\n        <div>\r\n          <img alt=\"flat Rack контецнеры\" src={icon03} />\r\n        </div>\r\n        <div className={s.menuItem__title_chemists}>\r\n          <span>перевозка</span>\r\n          <span>химических</span>\r\n          <span>грузов</span>\r\n        </div>\r\n        <div>\r\n          <img alt=\"развернуть меню\" src={chevronWhite} className={s.chevron_white} />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MenuSecondLevel\r\n","import React from 'react'\nimport s from './App.module.scss'\nimport MenuFirstLevel from './components/MenuFirstLevel/MenuFirstLevel'\nimport MenuSecondLevel from './components/MenuSecondLevel/MenuSecondLevel'\n\nfunction App() {\n  return (\n    <div>\n      <div className={s.navMenu}>\n        <MenuFirstLevel />\n      </div>\n      <div className={s.secondLevel}>\n        <div className={s.navMenu}>\n          <MenuSecondLevel />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}